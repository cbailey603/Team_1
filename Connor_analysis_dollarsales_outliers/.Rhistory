filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i,1] <- sum(x.city$sale.dollars)
}
print(ACS.dataFrame)
}
sum.dollarsales.cities(cities)
View(ACS.dataFrame)
sum.dollarsales.cities <- function(x) {
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.dataFrame <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
for (i in nrow(ACS.data)) {
x.city <- x %>%
filter(city == x$city[i]) %>%
filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i] <- sum(x.city$sale.dollars)
}
new <- ACS.dataFrame
}
sum.dollarsales.cities(cities)
sum.dollarsales.cities <- function(x) {
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.dataFrame <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
for (i in nrow(ACS.data)) {
x.city <- x %>%
filter(city == x$city[i]) %>%
filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i,1] <- sum(x.city$sale.dollars)
}
new <- ACS.dataFrame
}
sum.dollarsales.cities(cities)
View(cities)
sum.dollarsales.cities <- function(x) {
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.dataFrame <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
for (i in nrow(ACS.data)) {
x.city <- x %>%
filter(city == x$city[i]) %>%
filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i,1] <- sum(x.city$sale.dollars)
}
x$sale.dollars.sum <- ACS.dataFrame
}
sum.dollarsales.cities(cities)
sum.dollarsales.cities <- function(x) {
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.dataFrame <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
for (i in nrow(ACS.data)) {
x.city <- x %>%
filter(city == x$city[i]) %>%
filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i,1] <- sum(x.city$sale.dollars)
}
cities.sale.dollars.sum <- ACS.dataFrame
}
sum.dollarsales.cities(cities)
cities.sale.dollars.sum
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.data <- cities %>%
filter(Table.Name == "project.acs.cities.csv")
cities.sale.dollars.sum <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
View(cities.sale.dollars.sum)
sum.dollarsales.cities <- function(x) {
ACS.data <- x %>%
filter(Table.Name == "project.acs.cities.csv")
ACS.dataFrame <- data.frame(matrix(ncol = 1, nrow = nrow(ACS.data)))
for (i in nrow(ACS.data)) {
x.city <- x %>%
filter(city == x$city[i]) %>%
filter(Table.Name == "project.sales.cities.csv")
ACS.dataFrame[i,1] <- sum(x.city$sale.dollars)
}
cities.sale.dollars.sum <- ACS.dataFrame
}
sum.dollarsales.cities(cities)
View(cities.sale.dollars.sum)
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
cities <- read.csv("project.cities.csv")
counties <- read.csv("project.counties.csv")
zipcodes <- read.csv("project.zipcodes.csv")
View(cities)
cities.ACS <- cities %>%
filter(Table.Name == 'project.acs.cities.csv')
sumOf.dollarSales.cities <- c(1:nrow(cities.ACS))
sumOf.dollarSales.cities <- data.frame(matrix(ncol = 1, nrow = nrow(cities.ACS)))
View(sumOf.dollarSales.cities)
cities.sales <- cities %>%
filter(Table.Name == 'project.sales.cities.csv')
View(cities)
View(cities)
cities$sumOf.salesDollars <- data.frame(matrix(ncol = 3, nrow = nrow(cities)))
View(cities)
cities$sumOf.salesDollars <- data.frame(matrix(ncol = 1, nrow = nrow(cities)))
View(cities)
cities$sumOf.salesDollars <- matrix(ncol = 1, nrow = nrow(cities))
View(cities)
cities$sumOf.salesDollars <- matrix(nrow = nrow(cities))
View(cities)
View(cities)
View(cities)
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
cities <- read.csv("project.cities.csv")
counties <- read.csv("project.counties.csv")
zipcodes <- read.csv("project.zipcodes.csv")
View(cities)
cities.ACS <- cities %>%
filter(Table.Name == "project.acs.cities.csv")
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("plotly")
install.packages("plotly")
install.packages("GGally")
library("tidyverse")
library("ggplot2")
library("plotly")
library("GGally")
setwd("~/Documents/GitHub/Team_1")
cities.acs <- read.csv("project.acs.cities.csv")
cities.sales <- read.csv("project.sales.cities.csv")
cities <- merge(x=cities.acs, y=cities.sales, by="city")
View(cities)
counties.acs <- read.csv("project.acs.counties.csv")
counties.sales <- read.csv("project.sales.counties.csv")
counties <- merge(x=counties.acs, y=counties.sales, by="county")
zipcode.acs <- read.csv("project.acs.zipcode.csv")
zipcode.acs <- read.csv("project.acs.zipcodes.csv")
zipcode.sales <- read.csv("project.sales.zipcodes.csv")
zipcode <- merge(x=zipcode.acs, y=zipcode.sales, by="zipcode")
write.csv(zipcode, wd)
write.csv(cities, "project.cities.TEST.csv")
setwd("~/Documents/SCHOOL/BC/SPRING 2023/Software Tools/Project/project.data")
write.csv(cities, "project.cities.TEST.csv")
View(cities)
View(cities)
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (x[i,1] == x[i-1,1]) {
dataFrame[i] <- dataFrame[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
}
x$sum.sales.dollars <- dataFrame
}
sum.sale.dollars.CITIES(cities)
cities[1,1]
cities[0,1]
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i = 1) {
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
if (x[i,1] == x[i-1,1]) {
dataFrame[i] <- dataFrame[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
}
x$sum.sales.dollars <- dataFrame
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
else (x[i,1] == x[i-1,1]) {
View(cities)
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
dataFrame[i] <- dataFrame[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
}
x$sum.sales.dollars <- dataFrame
}
sum.sale.dollars.CITIES(cities)
View(cities)
sum.sale.dollars.CITIES <- function(x){
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
dataFrame[i] <- dataFrame[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
}
print(dataFrame)
}
sum.sale.dollars.CITIES(cities)
cities$city[1]
cities$city[28]
cities %>% filter(city == cities$city[28])
sum.sale.dollars.CITIES <- function(x){
# dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
x$sum.sales.dollars[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
x$sum.sales.dollars[i] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
x$sum.sales.dollars[i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
View(cities)
cities$sum.sales.dollars <- data.frame(matrix(ncol=1, nrow=nrow(cities)))
View(cities)
cities$sum.sales.dollars <- matrix(ncol=1, nrow=nrow(cities))
View(cities)
sum.sale.dollars.CITIES <- function(x){
# dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
x$sum.sales.dollars[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
x$sum.sales.dollars[i] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
x$sum.sales.dollars[i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
View(cities)
cities.acs <- read.csv("project.acs.cities.csv")
cities.sales <- read.csv("project.sales.cities.csv")
cities <- merge(x=cities.acs, y=cities.sales, by="city")
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(x)))
dataFrame <- data.frame(matrix(ncol=1, nrow=nrow(cities)))
View(dataFrame)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
dataFrame[i] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
dataFrame[i,1] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
dataFrame[i,1] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
dataFrame[i,1] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.dollars.cities <- data.frame(matrix(ncol=1, nrow=nrow(cities)))
colnames(sum.dollars.cities) <- "sum.dollar.cities"
View(sum.dollars.cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[i,1] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[i] <- x$sum.sales.dollars[i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.dollars.cities[1]
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[1,i] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[1,i] <- x$sum.sales.dollars[1,i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[1,i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[1,i] <- sum(z$sale.dollars)
}
else if (x[1,i] == x[1,i-1]) {
sum.dollars.cities[1,i] <- x$sum.sales.dollars[1,i-1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[1,i] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[i,1] <- x$sum.sales.dollars[i-1,1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[i,1] <- sum.sales.dollars[i-1,1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
sum.sale.dollars.CITIES <- function(x){
for(i in 1:nrow(x)) {
if (i == 1) {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
else if (x[i,1] == x[i-1,1]) {
sum.dollars.cities[i,1] <- sum.dollars.cities[i-1,1]
}
else {
z <- x %>%
filter(city == x$city[i])
sum.dollars.cities[i,1] <- sum(z$sale.dollars)
}
}
}
sum.sale.dollars.CITIES(cities)
View(sum.dollars.cities)
View(cities)
write.csv(cities, "project.cities.merged.csv")
write.csv(counties, "project.countie.merged.csv")
write.csv(zipcode, "project.zipcode.merged.csv")
View(cities)
cities$sale.dollars.capita <- cities$sales/cities$population
cities$sale.dollars.capita <- cities$sale.dollars/cities$population
View(cities)
cities$sale.volume.capita <- cities$sale.volume/cities$populatio
View(cities)
cities$sale.volume.capita <- cities$sale.volume/cities$population
View(cities)
counties$sale.dollars.capita <- counties$sale.dollars/counties$population
counties$sale.volume.capita <- counties$sale.volume/counties$population
zipcode$sale.dollars.capita <- zipcode$sale.dollars/zipcode$population
zipcode$sale.volume.capita <- zipcode$sale.volume/zipcode$population
write.csv(cities, "project.cities.merged.csv")
write.csv(counties, "project.countie.merged.csv")
write.csv(zipcode, "project.zipcode.merged.csv")
write.csv(cities, "project.cities.merged.csv")
write.csv(counties, "project.countie.merged.csv")
write.csv(zipcode, "project.zipcode.merged.csv")
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("plotly")
install.packages("GGally")
library("tidyverse")
library("ggplot2")
library("plotly")
library("GGally")
cities.acs <- read.csv("project.acs.cities.csv")
cities.sales <- read.csv("project.sales.cities.csv")
cities <- merge(x=cities.acs, y=cities.sales, by="city")
counties.acs <- read.csv("project.acs.counties.csv")
counties.sales <- read.csv("project.sales.counties.csv")
counties <- merge(x=counties.acs, y=counties.sales, by="county")
zipcode.acs <- read.csv("project.acs.zipcodes.csv")
zipcode.sales <- read.csv("project.sales.zipcodes.csv")
zipcode <- merge(x=zipcode.acs, y=zipcode.sales, by="zipcode")
# Creating per capita variables for the datasets
cities$sale.dollars.capita <- cities$sale.dollars/cities$population
cities$sale.volume.capita <- cities$sale.volume/cities$population
counties$sale.dollars.capita <- counties$sale.dollars/counties$population
counties$sale.volume.capita <- counties$sale.volume/counties$population
zipcode$sale.dollars.capita <- zipcode$sale.dollars/zipcode$population
zipcode$sale.volume.capita <- zipcode$sale.volume/zipcode$population
write.csv(cities, "project.cities.capita.csv")
write.csv(counties, "project.countie.capita.csv")
write.csv(zipcode, "project.zipcode.capita.csv")
