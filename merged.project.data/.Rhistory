# Wipe the environment clean
rm(list = ls())
source("~/Documents/GitHub/Team_1/ACS Data Analysis.R", echo=TRUE)
cities <- read_csv("project.data/project.acs.cities.csv")
View(cities)
counties <- read_csv("project.data/project.acs.counties.csv")
zipCodes <- read_csv("project.data/project.acs.zipcodes.csv")
percentOftotalPop <- function(x){
demographic <- c(x)
totalPop <- sum(cities$population, counties$population, zipCodes$population)
totalDemoPop <- sum(cities[x], counties[x], zipCodes[x])
return(totalDemoPop/totalPop)
}
# vector of all demographics
demographics <- (c("pop.white", "pop.black", "pop.indian", "pop.asian", "pop.hawai", "pop.other", "pop.multi"))
# function that calls percentOftotalPop for each demographic and stores results in a matrix
demographicPercentofTotal <- function(x){
matrix <- matrix(ncol = 2, nrow = 7)
for(i in 1:length(x)){
matrix[i,2] = percentOftotalPop(x[i])
matrix[i,1] = toupper(substring(x[i], 5))
}
return(matrix)
}
# create dataframe with demographic percentages
demographicDataFrame <- data.frame(demographicPercentofTotal(demographics))
# rename columns and convert to numeric
dataFrameColumnNames <- c("Race/Ethnicity", "Percent of Population" )
colnames(demographicDataFrame) = dataFrameColumnNames
# change percent of population colum to numeric
demographicDataFrame <- demographicDataFrame %>%
mutate_at(c("Percent of Population"), as.numeric)  %>%
mutate_if(is.numeric, round, 3)
str(demographicDataFrame)
ggplot(demographicDataFrame, aes(x = "", y = `Percent of Population`, fill = `Race/Ethnicity`)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
theme_void() +
labs(x = NULL, y = NULL, fill = NULL)
incomeByCounty <- counties %>%
summarize(county, income)
ggplot(incomeByCounty, aes(x = income)) +
geom_histogram()
# analysis on percent of population with at least a HS diploma or at least bachelors
educatedPopulation <- cities %>%
summarize(high.school, bachelor, population) %>%
mutate(popHS = ((high.school / 100)*population), popBach = ((bachelor / 100)*population)) %>%
summarize(percentPopHS = (sum(popHS, na.rm = TRUE)/(sum(population))*100), percentPopBach = (sum(popBach, na.rm = TRUE)/sum(population))*100)
educatedPopulation
source("~/Documents/GitHub/Team_1/ACS Data Analysis.R", echo=TRUE)
getwd()
listfiles()
list.files()
test <- read.csv("project.acs.counties.csv")
test2 <- read.csv("project.sales.counties.csv")
mergedTest <- merge(test, test2, by = "county")
View(mergedTest)
dfMergedTest <- data.frame(mergedTest %>%
group_by(county)%>%
mutate(perCapitaSales = sum(sale.dollars)/population))
library(tidyverse)
dfMergedTest <- data.frame(mergedTest %>%
group_by(county)%>%
mutate(perCapitaSales = sum(sale.dollars)/population))
View(dfMergedTest)
View(dfMergedTest)
dfMergedTest <- data.frame(mergedTest %>%
group_by(county)%>%
mutate(perCapitaSales = sum(sale.dollars)/population)) %>%
summarize(county, perCapitaSales)
View(dfMergedTest)
View(dfMergedTest)
dfMergedTest <- data.frame(mergedTest %>%
mutate(perCapitaSales = sum(sale.dollars)/population)) %>%
summarize(county, perCapitaSales)
View(dfMergedTest)
View(dfMergedTest)
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
cities <- read.csv("project.cities.csv")
getwd()
setwd("~/GitHub/Team_1/merged.project.data")
cities <- read.csv("project.cities.csv")
citySales <- data.frame(cities %>%
filter(Table.Name == "project.sales.cities.csv") %>%
group_by(city)%>%
summarize(sum(sale.dollars)))
cityPopulation <- cities %>%
filter(Table.Name == "project.acs.cities.csv") %>%
group_by(city) %>%
summarize(population)
salesPopulation <-
citySales %>% right_join(cityPopulation)
percapitaSales <- salesPopulation %>%
mutate(perCapitaSales = sum.sale.dollars./population)
View(percapitaSales)
View(percapitaSales)
plot <- ggplot(percapitaSales) +
geom_histogram()
View(plot)
library(tidyverse)
library(ggplot2)
plot
plot <- ggplot(percapitaSales, aes(x = percapitaSales)) +
geom_histogram()
plot
View(percapitaSales)
plot <- ggplot(percapitaSales, aes(x = percapitaSales)) +
geom_histogram()
plot
plot <- ggplot(percapitaSales, aes(x = 1)) +
geom_histogram()
plot
plot <- ggplot(percapitaSales, aes(x = "")) +
geom_histogram()
plot
plot <- ggplot(percapitaSales, aes(x = percapitaSales$perCapitaSales)) +
geom_histogram()
plot
rm(list = ls()) # Clear environment
gc()            # Clear memory
cat("\f")       # Clear console
